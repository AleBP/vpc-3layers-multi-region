---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Securily Customer Pentest VPC 3 Layer Multiregion'

Parameters:
  ClassB:
    Description: 'Class B of VPC (10.XXX.0.0/16)'
    Type: Number
    Default: 0
    ConstraintDescription: 'Must be in the range [0-255]'
    MinValue: 0
    MaxValue: 255
  CustomerAlias:
    Type: String
    Description: Please enter the CustomerAlias(example = bank123)
  CenterAccountId:
    Type: String
    Description: Please enter the CenterAccountId(example = XXXXXXXXXXX)
    Default: '137851847048'

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Sub '10.${ClassB}.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-VPC'
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-IG'

  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  SubnetAPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.0.0/20'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-PUB-SUBNET-AZ-A'
        - Key: Reach
          Value: public

  SubnetBPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.32.0/20'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-PUB-SUBNET-AZ-B'
        - Key: Reach
          Value: public
  
  SubnetCPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.64.0/20'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-PUB-SUBNET-AZ-C'
        - Key: Reach
          Value: public

  SubnetAPrivate:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.16.0/20'
      VpcId: !Ref VPC
      Tags:
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-PRIV-SUBNET-AZ-A'
        - Key: Reach
          Value: private

  SubnetBPrivate:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.48.0/20'
      VpcId: !Ref VPC
      Tags:
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-PRIV-SUBNET-AZ-B'
        - Key: Reach
          Value: private

  SubnetCPrivate:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.80.0/20'
      VpcId: !Ref VPC
      Tags:
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-PRIV-SUBNET-AZ-C'
        - Key: Reach
          Value: private

  SubnetAIntra:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.96.0/20'
      VpcId: !Ref VPC
      Tags:
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-INTRA-SUBNET-AZ-A'
        - Key: Reach
          Value: private

  SubnetBIntra:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.112.0/20'
      VpcId: !Ref VPC
      Tags:
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-INTRA-SUBNET-AZ-B'
        - Key: Reach
          Value: private

  SubnetCIntra:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.128.0/20'
      VpcId: !Ref VPC
      Tags:
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-INTRA-SUBNET-AZ-C'
        - Key: Reach
          Value: private

  RouteTablePublic: # should be RouteTablePublic
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-PUBLIC-RT'

  RouteTablePrivate: # should be RouteTablePrivate
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-PRIVATE-RT'

  RouteTableIntra:  # should be RouteTableIntra
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: CustomerAlias
          Value: !Sub '${CustomerAlias}'
        - Key: Name
          Value: !Sub '${CustomerAlias}-${AWS::Region}-INTRA-RT'

  RouteTableAssociationAPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetAPublic
      RouteTableId: !Ref RouteTablePublic

  RouteTableAssociationBPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetBPublic
      RouteTableId: !Ref RouteTablePublic

  RouteTableAssociationCPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetCPublic
      RouteTableId: !Ref RouteTablePublic

  RouteTableAssociationAPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetAPrivate
      RouteTableId: !Ref RouteTablePrivate

  RouteTableAssociationBPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetBPrivate
      RouteTableId: !Ref RouteTablePrivate

  RouteTableAssociationCPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetCPrivate
      RouteTableId: !Ref RouteTablePrivate

  RouteTableAssociationAIntra:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetAIntra
      RouteTableId: !Ref RouteTableIntra

  RouteTableAssociationBIntra:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetBIntra
      RouteTableId: !Ref RouteTableIntra

  RouteTableAssociationCIntra:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetCIntra
      RouteTableId: !Ref RouteTableIntra

  RouteTablePublicInternetRoute: # should be RouteTablePublicAInternetRoute, but logical id was not changed for backward compatibility
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

Outputs:
  TemplateID:
    Description: 'Securily template'
    Value: 'Securily template'
  AZs:
    Description: 'AZs'
    Value: 3
    Export:
      Name: !Sub '${CustomerAlias}-AZs'
  AZA:
    Description: 'AZ of A'
    Value: !Select [0, !GetAZs '']
    Export:
      Name: !Sub '${CustomerAlias}-AZA'
  AZB:
    Description: 'AZ of B'
    Value: !Select [1, !GetAZs '']
    Export:
      Name: !Sub '${CustomerAlias}-AZB'
  AZC:
    Description: 'AZ of C'
    Value: !Select [2, !GetAZs '']
    Export:
      Name: !Sub '${CustomerAlias}-AZC'
  ClassB:
    Description: 'Class B.'
    Value: !Ref ClassB
    Export:
      Name: !Sub '${CustomerAlias}-ClassB'
  VpcId:
    Description: 'VPC.'
    Value: !Ref VPC
    Export:
      Name: !Sub '${CustomerAlias}-VPC'
  SubnetsPublic:
    Description: 'Subnets public.'
    Value: !Join [',', [!Ref SubnetAPublic, !Ref SubnetBPublic, !Ref SubnetCPublic]]
    Export:
      Name: !Sub '${CustomerAlias}-SubnetsPublic'
  SubnetsPrivate:
    Description: 'Subnets private.'
    Value: !Join [',', [!Ref SubnetAPrivate, !Ref SubnetBPrivate, !Ref SubnetCPrivate]]
    Export:
      Name: !Sub '${CustomerAlias}-SubnetsPrivate'
  SubnetsIntra:
    Description: 'Subnets intra.'
    Value: !Join [',', [!Ref SubnetAIntra, !Ref SubnetBIntra, !Ref SubnetCIntra]]
    Export:
      Name: !Sub '${CustomerAlias}-SubnetsIntra'
  RouteTablePublic: # deprecated in v4, will be removed in v5
    Description: 'Route table public (deprecated in v4, will be removed in v5).'
    Value: !Ref RouteTablePublic
    Export:
      Name: !Sub '${CustomerAlias}-RouteTablePublic'
  RouteTablePrivate: # deprecated in v4, will be removed in v5
    Description: 'Route table private (deprecated in v4, will be removed in v5).'
    Value: !Ref RouteTablePrivate
    Export:
      Name: !Sub '${CustomerAlias}-RouteTablePrivate'
  RouteTableIntra: # deprecated in v4, will be removed in v5
    Description: 'Route table intra (deprecated in v4, will be removed in v5).'
    Value: !Ref RouteTableIntra
    Export:
      Name: !Sub '${CustomerAlias}-RouteTableIntra'
  SubnetAPublic:
    Description: 'Subnet A public.'
    Value: !Ref SubnetAPublic
    Export:
      Name: !Sub '${CustomerAlias}-SubnetAPublic'
  SubnetAPrivate:
    Description: 'Subnet A private.'
    Value: !Ref SubnetAPrivate
    Export:
      Name: !Sub '${CustomerAlias}-SubnetAPrivate'
  SubnetBPublic:
    Description: 'Subnet B public.'
    Value: !Ref SubnetBPublic
    Export:
      Name: !Sub '${CustomerAlias}-SubnetBPublic'
  SubnetBPrivate:
    Description: 'Subnet B private.'
    Value: !Ref SubnetBPrivate
    Export:
      Name: !Sub '${CustomerAlias}-SubnetBPrivate'
  SubnetCPublic:
    Description: 'Subnet C public.'
    Value: !Ref SubnetCPublic
    Export:
      Name: !Sub '${CustomerAlias}-SubnetCPublic'
  SubnetCPrivate:
    Description: 'Subnet C private.'
    Value: !Ref SubnetCPrivate
    Export:
      Name: !Sub '${CustomerAlias}-SubnetCPrivate'
  SubnetAIntra:
    Description: 'Subnet A intra.'
    Value: !Ref SubnetAIntra
    Export:
      Name: !Sub '${CustomerAlias}-SubnetAIntra'
  SubnetBIntra:
    Description: 'Subnet B intra.'
    Value: !Ref SubnetBIntra
    Export:
      Name: !Sub '${CustomerAlias}-SubnetBIntra'
  SubnetCIntra:
    Description: 'Subnet C intra.'
    Value: !Ref SubnetCIntra
    Export:
      Name: !Sub '${CustomerAlias}-SubnetCIntra'
  CustomerAlias:
    Description: 'Bucket Created using this template.'
    Value: !Sub '${CustomerAlias}'